---
import Icon from './Icon.astro';

interface Props {
	title: string;
	description?: string;
	href?: string;
	icon?: string;
	class?: string;
}

const {
	title,
	description,
	href,
	icon,
	class: className = ''
} = Astro.props;

const Tag = href ? 'a' : 'div';
---

<Tag
	href={href}
	class:list={['card', { 'card-link': href }, className]}
>
	{icon && (
		<div class="card-icon" aria-hidden="true">
			<Icon name={icon} size="xl" />
		</div>
	)}
	<div class="card-content">
		<h3 class="card-title">{title}</h3>
		{description && (
			<p class="card-description">{description}</p>
		)}
		<slot />
	</div>
	{href && (
		<div class="card-arrow" aria-hidden="true">
			â†’
		</div>
	)}
</Tag>

<style>
	.card {
		display: flex;
		flex-direction: column;
		background: white;
		border: 1px solid var(--color-gray-200);
		border-radius: var(--radius-2xl);
		padding: var(--space-8);
		box-shadow: var(--shadow-sm);
		transition: all var(--transition-slow) cubic-bezier(0.4, 0, 0.2, 1);
		text-decoration: none;
		color: inherit;
		height: 100%;
		position: relative;
		overflow: hidden;
	}

	.card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 3px;
		background: linear-gradient(90deg, var(--color-primary-500), var(--color-primary-300));
		opacity: 0;
		transition: opacity var(--transition-base);
	}

	.card:hover {
		text-decoration: none;
	}

	.card-link {
		cursor: pointer;
		position: relative;
	}

	.card-link:hover {
		border-color: var(--color-primary-200);
		box-shadow: 0 20px 25px -5px rgba(14, 165, 233, 0.1),
		            0 10px 10px -5px rgba(14, 165, 233, 0.04);
		transform: translateY(-4px);
	}

	.card-link:hover::before {
		opacity: 1;
	}

	.card-link:hover .card-title {
		color: var(--color-primary-600);
	}

	.card-link:hover .card-arrow {
		transform: translateX(6px);
		color: var(--color-primary-600);
	}

	.card-link:hover .card-icon {
		transform: scale(1.05);
	}

	.card-icon {
		font-size: var(--text-4xl);
		margin-bottom: var(--space-5);
		color: var(--color-primary-600);
		transition: transform var(--transition-base) ease-out;
	}

	.card-content {
		flex: 1;
	}

	.card-title {
		font-size: var(--text-2xl);
		font-weight: 700;
		color: var(--color-gray-900);
		margin-bottom: var(--space-4);
		transition: color var(--transition-base);
		line-height: var(--leading-tight);
	}

	.card-description {
		font-size: var(--text-lg);
		color: var(--color-gray-600);
		line-height: var(--leading-relaxed);
		margin-bottom: 0;
	}

	.card-arrow {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		font-size: var(--text-2xl);
		color: var(--color-gray-400);
		margin-top: var(--space-5);
		transition: all var(--transition-slow) cubic-bezier(0.4, 0, 0.2, 1);
		font-weight: 600;
	}

	/* Focus styles for accessibility */
	.card-link:focus-visible {
		outline: 3px solid var(--color-primary-500);
		outline-offset: 2px;
		border-color: var(--color-primary-300);
	}

	/* Dark mode support */
	[data-theme="dark"] .card {
		background: var(--color-gray-800);
		border-color: var(--color-gray-700);
	}

	[data-theme="dark"] .card-link:hover {
		border-color: var(--color-primary-700);
		box-shadow: 0 20px 25px -5px rgba(14, 165, 233, 0.2),
		            0 10px 10px -5px rgba(14, 165, 233, 0.1);
	}
</style>
