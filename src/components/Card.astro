---
interface Props {
  title: string;
  description?: string;
  href?: string;
  icon?: string;
  difficulty?: string;
  class?: string;
}

const { title, description, href, icon, difficulty, class: className = '' } = Astro.props;

const Tag = href ? 'a' : 'div';
---

<Tag href={href} class:list={['card', { 'card-link': href }, className]}>
  {
    icon && (
      <div class="card-icon" aria-hidden="true">
        {icon}
      </div>
    )
  }
  <div class="card-content">
    <h3 class="card-title">{title}</h3>
    {description && <p class="card-description">{description}</p>}
    {difficulty && <span class="card-difficulty">{difficulty}</span>}
    <slot />
  </div>
  {
    href && (
      <div class="card-arrow" aria-hidden="true">
        â†’
      </div>
    )
  }
</Tag>

<style>
  .card {
    display: flex;
    flex-direction: column;
    background-color: white;
    border: 1px solid var(--color-gray-200);
    border-radius: var(--radius-xl);
    padding: var(--space-6);
    box-shadow: var(--shadow-sm);
    transition: all var(--transition-base);
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .dark .card {
    background-color: rgb(31 41 55);
    border-color: rgb(75 85 99);
  }

  .card:hover {
    text-decoration: none;
  }

  .card-link {
    cursor: pointer;
    position: relative;
  }

  .card-link:hover {
    border-color: var(--color-primary-300);
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }

  .dark .card-link:hover {
    border-color: var(--color-primary-600);
  }

  .card-link:hover .card-title {
    color: var(--color-primary-600);
  }

  .dark .card-link:hover .card-title {
    color: var(--color-primary-400);
  }

  .card-link:hover .card-arrow {
    transform: translateX(4px);
    color: var(--color-primary-600);
  }

  .dark .card-link:hover .card-arrow {
    color: var(--color-primary-400);
  }

  .card-icon {
    font-size: var(--text-4xl);
    margin-bottom: var(--space-4);
  }

  .card-content {
    flex: 1;
  }

  .card-title {
    font-size: var(--text-xl);
    font-weight: 700;
    color: var(--color-gray-900);
    margin-bottom: var(--space-3);
    transition: color var(--transition-base);
  }

  .dark .card-title {
    color: rgb(243 244 246);
  }

  .card-description {
    font-size: var(--text-base);
    color: var(--color-gray-600);
    line-height: var(--leading-relaxed);
    margin-bottom: 0;
  }

  .dark .card-description {
    color: rgb(209 213 219);
  }

  .card-difficulty {
    display: inline-block;
    font-size: var(--text-xs);
    font-weight: 600;
    color: var(--color-primary-700);
    background-color: var(--color-primary-100);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    margin-top: var(--space-2);
  }

  .dark .card-difficulty {
    color: var(--color-primary-300);
    background-color: var(--color-primary-900);
  }

  .card-arrow {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    font-size: var(--text-2xl);
    color: var(--color-gray-400);
    margin-top: var(--space-4);
    transition: all var(--transition-base);
  }

  .dark .card-arrow {
    color: rgb(107 114 128);
  }

  /* Focus styles for accessibility */
  .card-link:focus-visible {
    outline: 2px solid var(--color-primary-500);
    outline-offset: 2px;
  }
</style>
