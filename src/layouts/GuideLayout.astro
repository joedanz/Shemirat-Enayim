---
import Layout from './Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Alert from '../components/Alert.astro';

interface Props {
	title: string;
	description?: string;
	difficulty?: 'beginner' | 'intermediate' | 'advanced';
	timeEstimate?: string;
	prerequisites?: string[];
	image?: string;
}

const {
	title,
	description,
	difficulty = 'beginner',
	timeEstimate,
	prerequisites = [],
	image
} = Astro.props;

const currentPath = Astro.url.pathname;

const difficultyLabels = {
	beginner: 'Beginner',
	intermediate: 'Intermediate',
	advanced: 'Advanced'
};

const difficultyColors = {
	beginner: 'success',
	intermediate: 'warning',
	advanced: 'error'
};
---

<Layout title={title} description={description} image={image}>
	<Header currentPath={currentPath} />

	<main class="guide-main">
		<div class="container">
			<nav class="breadcrumb" aria-label="Breadcrumb">
				<slot name="breadcrumb" />
			</nav>

			<article class="guide-article">
				<header class="guide-header">
					<h1>{title}</h1>

					<div class="guide-meta">
						{difficulty && (
							<span class:list={['meta-badge', `badge-${difficultyColors[difficulty]}`]}>
								{difficultyLabels[difficulty]}
							</span>
						)}
						{timeEstimate && (
							<span class="meta-item">
								<svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
									<circle cx="8" cy="8" r="7"></circle>
									<polyline points="8 4 8 8 10 10"></polyline>
								</svg>
								{timeEstimate}
							</span>
						)}
					</div>

					{description && (
						<p class="lead">{description}</p>
					)}

					{prerequisites.length > 0 && (
						<Alert type="info">
							<strong>Prerequisites:</strong>
							<ul class="prerequisites-list">
								{prerequisites.map((prereq) => (
									<li>{prereq}</li>
								))}
							</ul>
						</Alert>
					)}
				</header>

				<div class="guide-body">
					<slot />
				</div>

				<footer class="guide-footer">
					<slot name="next-steps" />
				</footer>
			</article>

			<aside class="guide-sidebar">
				<div class="sidebar-sticky">
					<slot name="sidebar" />
				</div>
			</aside>
		</div>
	</main>

	<Footer />
</Layout>

<style>
	.guide-main {
		flex: 1;
		padding: var(--space-8) 0;
	}

	@media (min-width: 768px) {
		.guide-main {
			padding: var(--space-12) 0;
		}
	}

	.guide-main > .container {
		display: grid;
		grid-template-columns: 1fr;
		gap: var(--space-8);
	}

	@media (min-width: 1024px) {
		.guide-main > .container {
			grid-template-columns: 1fr 280px;
			gap: var(--space-12);
		}
	}

	/* Breadcrumb */
	.breadcrumb {
		grid-column: 1 / -1;
		font-size: var(--text-sm);
		color: var(--color-gray-600);
		margin-bottom: var(--space-4);
	}

	.breadcrumb :global(ol) {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: var(--space-2);
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.breadcrumb :global(li) {
		display: flex;
		align-items: center;
		gap: var(--space-2);
		margin: 0;
	}

	.breadcrumb :global(li:not(:last-child)::after) {
		content: '/';
		color: var(--color-gray-400);
	}

	/* Article */
	.guide-article {
		max-width: 100%;
	}

	.guide-header {
		margin-bottom: var(--space-8);
		padding-bottom: var(--space-6);
		border-bottom: 2px solid var(--color-gray-200);
	}

	.guide-header h1 {
		margin-bottom: var(--space-4);
	}

	/* Meta Information */
	.guide-meta {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: var(--space-3);
		margin-bottom: var(--space-4);
	}

	.meta-badge {
		display: inline-flex;
		align-items: center;
		padding: var(--space-1) var(--space-3);
		font-size: var(--text-sm);
		font-weight: 600;
		border-radius: var(--radius-full);
		text-transform: uppercase;
		letter-spacing: 0.025em;
	}

	.badge-success {
		background-color: var(--color-secondary-100);
		color: var(--color-secondary-800);
	}

	.badge-warning {
		background-color: #fef3c7;
		color: #92400e;
	}

	.badge-error {
		background-color: #fee2e2;
		color: #7f1d1d;
	}

	.meta-item {
		display: inline-flex;
		align-items: center;
		gap: var(--space-2);
		font-size: var(--text-sm);
		color: var(--color-gray-600);
	}

	.lead {
		font-size: var(--text-xl);
		color: var(--color-gray-700);
		line-height: var(--leading-relaxed);
		font-weight: 500;
		margin-bottom: var(--space-6);
	}

	.prerequisites-list {
		margin-top: var(--space-2);
		margin-bottom: 0;
	}

	/* Guide Body */
	.guide-body {
		max-width: 65ch;
		line-height: var(--leading-relaxed);
	}

	.guide-body :global(h2) {
		margin-top: var(--space-12);
		margin-bottom: var(--space-4);
		padding-top: var(--space-4);
		border-top: 1px solid var(--color-gray-200);
		display: flex;
		align-items: center;
		gap: var(--space-3);
	}

	.guide-body :global(h2:first-child) {
		margin-top: 0;
		padding-top: 0;
		border-top: none;
	}

	.guide-body :global(h3) {
		margin-top: var(--space-8);
		margin-bottom: var(--space-3);
	}

	.guide-body :global(img) {
		max-width: 100%;
		height: auto;
		border-radius: var(--radius-lg);
		box-shadow: var(--shadow-md);
		margin: var(--space-6) 0;
		border: 1px solid var(--color-gray-200);
	}

	.guide-body :global(code) {
		font-family: var(--font-mono);
		font-size: 0.9em;
		background-color: var(--color-gray-100);
		padding: 0.125rem 0.375rem;
		border-radius: var(--radius-base);
		color: var(--color-gray-800);
	}

	.guide-body :global(pre) {
		background-color: var(--color-gray-900);
		color: var(--color-gray-100);
		padding: var(--space-4);
		border-radius: var(--radius-lg);
		overflow-x: auto;
		margin: var(--space-6) 0;
	}

	.guide-body :global(pre code) {
		background: none;
		padding: 0;
		color: inherit;
	}

	/* Step counter for ordered lists */
	.guide-body :global(ol) {
		counter-reset: step-counter;
		list-style: none;
		padding-left: 0;
	}

	.guide-body :global(ol > li) {
		counter-increment: step-counter;
		position: relative;
		padding-left: var(--space-10);
		margin-bottom: var(--space-6);
	}

	.guide-body :global(ol > li::before) {
		content: counter(step-counter);
		position: absolute;
		left: 0;
		top: 0;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 32px;
		height: 32px;
		background-color: var(--color-primary-600);
		color: white;
		border-radius: var(--radius-full);
		font-weight: 700;
		font-size: var(--text-sm);
	}

	/* Guide Footer */
	.guide-footer {
		margin-top: var(--space-12);
		padding-top: var(--space-8);
		border-top: 2px solid var(--color-gray-200);
	}

	.guide-footer :global(h2) {
		margin-bottom: var(--space-6);
	}

	/* Sidebar */
	.guide-sidebar {
		display: none;
	}

	@media (min-width: 1024px) {
		.guide-sidebar {
			display: block;
		}
	}

	.sidebar-sticky {
		position: sticky;
		top: calc(var(--space-20));
	}

	.guide-sidebar :global(.sidebar-section) {
		background-color: var(--color-gray-50);
		padding: var(--space-6);
		border-radius: var(--radius-lg);
		border: 1px solid var(--color-gray-200);
		margin-bottom: var(--space-6);
	}

	.guide-sidebar :global(.sidebar-section h3) {
		font-size: var(--text-lg);
		margin-bottom: var(--space-4);
	}

	.guide-sidebar :global(.sidebar-section ul) {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.guide-sidebar :global(.sidebar-section li) {
		margin-bottom: var(--space-2);
	}

	.guide-sidebar :global(.sidebar-section a) {
		font-size: var(--text-sm);
		color: var(--color-gray-700);
		text-decoration: none;
		transition: color var(--transition-base);
	}

	.guide-sidebar :global(.sidebar-section a:hover) {
		color: var(--color-primary-600);
	}

	/* Print styles */
	@media print {
		.guide-sidebar,
		.breadcrumb {
			display: none;
		}

		.guide-body :global(ol > li::before) {
			print-color-adjust: exact;
			-webkit-print-color-adjust: exact;
		}
	}
</style>
