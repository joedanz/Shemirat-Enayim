---
import Icon from './Icon.astro';
import Button from './Button.astro';

interface Props {
	icon?: string;
	title: string;
	description?: string;
	actionText?: string;
	actionHref?: string;
	class?: string;
}

const {
	icon,
	title,
	description,
	actionText,
	actionHref,
	class: className = ''
} = Astro.props;
---

<div class:list={['empty-state', className]}>
	{icon && (
		<div class="empty-icon">
			<Icon name={icon} size="xl" />
		</div>
	)}
	<h3 class="empty-title">{title}</h3>
	{description && <p class="empty-description">{description}</p>}
	{actionText && actionHref && (
		<div class="empty-action">
			<Button href={actionHref} variant="primary">{actionText}</Button>
		</div>
	)}
	<slot />
</div>

<style>
	.empty-state {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		text-align: center;
		padding: var(--space-16) var(--space-8);
		gap: var(--space-4);
	}

	.empty-icon {
		width: 64px;
		height: 64px;
		display: flex;
		align-items: center;
		justify-content: center;
		background-color: var(--color-gray-100);
		border-radius: var(--radius-full);
		color: var(--color-gray-400);
		margin-bottom: var(--space-2);
	}

	.empty-icon :global(svg) {
		width: 32px;
		height: 32px;
	}

	.empty-title {
		font-size: var(--text-2xl);
		font-weight: 700;
		color: var(--color-gray-900);
		margin: 0;
	}

	.empty-description {
		font-size: var(--text-base);
		color: var(--color-gray-600);
		max-width: 32rem;
		margin: 0;
		line-height: var(--leading-relaxed);
	}

	.empty-action {
		margin-top: var(--space-4);
	}
</style>
