---
interface Props {
	size?: 'sm' | 'md' | 'lg';
	text?: string;
	class?: string;
}

const { size = 'md', text, class: className = '' } = Astro.props;
---

<div class:list={['loading-spinner', `loading-${size}`, className]} role="status">
	<div class="spinner"></div>
	{text && <p class="loading-text">{text}</p>}
	<span class="sr-only">Loading...</span>
</div>

<style>
	.loading-spinner {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		gap: var(--space-4);
		padding: var(--space-8);
	}

	.spinner {
		border: 3px solid var(--color-gray-200);
		border-top-color: var(--color-primary-600);
		border-radius: var(--radius-full);
		animation: spin 0.8s linear infinite;
	}

	.loading-sm .spinner {
		width: 20px;
		height: 20px;
		border-width: 2px;
	}

	.loading-md .spinner {
		width: 40px;
		height: 40px;
		border-width: 3px;
	}

	.loading-lg .spinner {
		width: 60px;
		height: 60px;
		border-width: 4px;
	}

	.loading-text {
		color: var(--color-gray-600);
		font-size: var(--text-base);
		margin: 0;
	}

	@keyframes spin {
		to {
			transform: rotate(360deg);
		}
	}

	.sr-only {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border-width: 0;
	}
</style>
